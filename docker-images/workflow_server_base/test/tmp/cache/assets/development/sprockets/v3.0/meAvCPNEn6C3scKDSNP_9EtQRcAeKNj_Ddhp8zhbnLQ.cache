I"j(function() {
  angular.module('TabManagement').factory('PageTypes', function(uuid4, Restangular, Workflows) {
    var editTemplateUrl, indexTemplateUrl, topBarTemplateUrl;
    editTemplateUrl = function(type) {
      return "templates/" + type + "/edit";
    };
    indexTemplateUrl = function(type) {
      return "templates/" + type + "/index";
    };
    topBarTemplateUrl = function(type) {
      return "templates/" + type + "/top_bar";
    };
    return {
      User: {
        icon: 'icon-user',
        params: function(id) {
          return {
            type: 'User',
            id: id
          };
        },
        resolves: function(params) {
          return {
            user: Restangular.one('users', params['id']).get()
          };
        },
        template: editTemplateUrl('user'),
        controller: 'UserPageController'
      },
      Users: {
        icon: 'icon-groups-friends',
        params: function(id) {
          return {
            type: 'Users',
            id: null
          };
        },
        resolves: function(params) {
          return {
            users: Restangular.all('users').getList()
          };
        },
        template: indexTemplateUrl('user'),
        controller: 'UsersPageController'
      },
      Workflow: {
        icon: 'icon-algorhythm',
        params: function(id) {
          return {
            type: 'Workflow',
            id: id
          };
        },
        resolves: function(params) {
          return {
            workflow: Workflows.get(params['id'])
          };
        },
        template: editTemplateUrl('workflow'),
        controller: 'WorkflowPageController'
      },
      Workflows: {
        icon: 'icon-algorhythm',
        params: function() {
          return {
            type: 'Workflows',
            id: null
          };
        },
        resolves: function(params) {
          return {
            workflows: Workflows.index()
          };
        },
        template: indexTemplateUrl('workflow'),
        controller: 'WorkflowsPageController'
      },
      WorkflowVersion: {
        icon: 'icon-algorhythm',
        params: function(id) {
          return {
            type: 'WorkflowVersion',
            id: id
          };
        },
        resolves: function(params) {
          return {
            workflow_version: Restangular.one('workflow_versions', params['id']).get()
          };
        },
        template: editTemplateUrl('workflow_version'),
        controller: 'WorkflowVersionPageController'
      },
      WorkflowBundle: {
        icon: 'icon-stacks',
        params: function(id) {
          return {
            type: 'WorkflowBundle',
            id: id
          };
        },
        resolves: function(params) {
          return {
            workflow_bundle: WorkflowBundles.get(params['id'])
          };
        },
        template: editTemplateUrl('workflow_bundle'),
        controller: 'WorkflowBundlePageController'
      },
      WorkflowBundles: {
        icon: 'icon-stacks',
        params: function() {
          return {
            type: 'WorkflowBundles',
            id: null
          };
        },
        resolves: function(params) {
          return {
            workflows: WorkflowBundles.index()
          };
        },
        template: indexTemplateUrl('workflow_bundle'),
        controller: 'WorkflowBundlesPageController'
      },
      ProcessDesigner: {
        icon: 'icon-design',
        params: function(id) {
          return {
            type: 'ProcessDesigner',
            id: id
          };
        },
        resolves: function(params) {
          return {
            workflow_version: Restangular.one('workflow_versions', params['id']).get({
              for_designer: true
            })
          };
        },
        template: 'templates/process_designer/index',
        controller: 'ProcessDesignerPageController'
      }
    };
  });

}).call(this);
:ET